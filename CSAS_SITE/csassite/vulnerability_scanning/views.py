from django.shortcuts import render, redirect
from .models import Target, ScanTask, Vulnerability_1, Vulnerability_2, Vulnerability_3
from .forms import AddForm, AddScanTaskForm, Report
from django.http import HttpResponse, HttpResponseRedirect
from .scan_1 import main
from .scan_2 import store_vulner, found_exploit

# Create your views here.


def home(request):
    return render(request, "vulnerability_scanning/home.html")


def target(request):
    if request.method == 'POST':
        form = AddForm(request.POST)

        if form.is_valid():
            url = form.cleaned_data['url']
            description = form.cleaned_data['description']
            targetlist = Target.targetob.all()
            if 'add' in request.POST:
                for t in targetlist:
                    if url == t.url:
                        return render(request, "vulnerability_scanning/wrong_1.html")
                tr = Target.targetob.create(url=url, description=description)
                tr.save()
                return HttpResponseRedirect("http://127.0.0.1:8000/vulnerability_scanning/target")
            if 'delete' in request.POST:
                check = request.POST.getlist('choosetarget')
                if check:
                    for c in check:
                        Target.targetob.filter(pk=int(c)).delete()
                    return HttpResponseRedirect("http://127.0.0.1:8000/vulnerability_scanning/target")
                else:
                    return render(request, "vulnerability_scanning/wrong_2.html")
            targetlist = Target.targetob.all()
        else:
            return HttpResponse("Wrong!")
    else:
        form = AddForm()
        targetlist = Target.targetob.all()
    return render(request, "vulnerability_scanning/target_1.html", {'form': form, 'targetlist': targetlist})


def scan(request):
    scantasklist = ScanTask.scantaskob.all()
    targetlist = Target.targetob.all()
    if request.method == 'POST':
        form = AddScanTaskForm(request.POST)

        if form.is_valid():
            taskname = form.cleaned_data['taskname']
            target = form.cleaned_data['target']
            method_1 = form.cleaned_data['method_1']
            method_2 = form.cleaned_data['method_2']
            method = 0
            if 'add' in request.POST:
                if method_1 == 1 and method_2 == 1:
                    method = 1
                if method_1 == 1 and method_2 != 1:
                    method = 2
                if method_1 != 1 and method_2 == 1:
                    method = 3
                if method_1 != 1 and method_2 != 1:
                    return render(request, "vulnerability_scanning/wrong.html")
                for s in scantasklist:
                    if target == s.target and method == s.method:
                        return render(request, "vulnerability_scanning/wrong.html")
                scantask = ScanTask.scantaskob.create(taskname=taskname, target=target, method=method, runornot=1)
                scantask.save()
                scantasklist = ScanTask.scantaskob.all()
                return HttpResponseRedirect("http://127.0.0.1:8000/vulnerability_scanning/scan")
            if 'delete' in request.POST:
                check = request.POST.getlist('choosescantask')
                if check:
                    for c in check:
                        ScanTask.scantaskob.filter(pk=int(c)).delete()
                    scantasklist = ScanTask.scantaskob.all()
                    return HttpResponseRedirect("http://127.0.0.1:8000/vulnerability_scanning/scan")
                else:
                    return render(request, "vulnerability_scanning/delete2.html")
            if 'start' in request.POST:
                check = request.POST.getlist('choosescantask')
                if check:
                    for c in check:
                        scantasklist_1 = ScanTask.scantaskob.filter(pk=int(c)).filter(runornot=2)
                        if scantasklist_1:
                            return render(request, "vulnerability_scanning/wrong.html")
                    for c in check:
                        ScanTask.scantaskob.filter(pk=int(c)).update(runornot=2)
                        scantasklist_1 = ScanTask.scantaskob.filter(pk=int(c)).filter(method=1)
                        if scantasklist_1:
                            for s in scantasklist_1:
                                awvs_vulns = main("http://10.10.10.12/dvwa/", int(c))
                                awvs_vulns_1 = store_vulner("static/vuln.json")
                                awvs_vulns_2 = found_exploit("static/module.json")
                                for i in [1,2,3,4]:
                                    v = Vulnerability_1.vulnob.create(vulntitle=awvs_vulns[0]['data'][i]['title'], vulnpayload=awvs_vulns[0]['data'][i]['payload'], taskname=int(c))
                                    v.save()
                                for a in awvs_vulns_1:
                                    v = Vulnerability_2.vulnob.create(vulnname=a.name, vulnlink=a.url, taskname=int(c))
                                    v.save()
                                for b in awvs_vulns_2:
                                    v = Vulnerability_3.vulnob.create(vulnexploit=b.exploit, vulnpayload=b.payload, vulndescription=b.description, taskname=int(c))
                                    v.save()
                        scantasklist_2 = ScanTask.scantaskob.filter(pk=int(c)).filter(method=2)
                        if scantasklist_2:
                            for s in scantasklist_2:
                                awvs_vulns_1 = store_vulner("static/vuln.json")
                                awvs_vulns_2 = found_exploit("static/module.json")
                                for a in awvs_vulns_1:
                                    v = Vulnerability_2.vulnob.create(vulnname=a.name, vulnlink=a.url, taskname=int(c))
                                    v.save()
                                for b in awvs_vulns_2:
                                    v = Vulnerability_3.vulnob.create(vulnexploit=b.exploit, vulnpayload=b.payload, vulndescription=b.description, taskname=int(c))
                                    v.save()
                        scantasklist_3 = ScanTask.scantaskob.filter(pk=int(c)).filter(method=3)
                        if scantasklist_3:
                            for s in scantasklist_3:
                                awvs_vulns = main("http://10.10.10.12/dvwa/", int(c))
                                for i in [1, 2, 3, 4]:
                                    v = Vulnerability_1.vulnob.create(vulntitle=awvs_vulns[0]['data'][i]['title'], vulnpayload=awvs_vulns[0]['data'][i]['payload'], taskname=int(c))
                                    v.save()
                    return HttpResponseRedirect("http://127.0.0.1:8000/vulnerability_scanning/scan")
                else:
                    return HttpResponse("请先选择扫描目标！")
            scantasklist = ScanTask.scantaskob.all()

    else:
        form = AddScanTaskForm()
    return render(request, "vulnerability_scanning/scan.html",
                  {'form': form, 'scantasklist': scantasklist, 'targetlist': targetlist})


def result(request, scantask_id):
    s = ScanTask.scantaskob.filter(pk=scantask_id).filter(runornot=1)
    if s:
        return render(request, "vulnerability_scanning/wrong.html")
    vulnlist_1 = Vulnerability_1.vulnob.filter(taskname=scantask_id)
    vulnlist_2 = Vulnerability_2.vulnob.filter(taskname=scantask_id)
    vulnlist_3 = Vulnerability_3.vulnob.filter(taskname=scantask_id)
    return render(request, "vulnerability_scanning/result.html", {'vulnlist_1': vulnlist_1, 'vulnlist_2':vulnlist_2, 'vulnlist_3': vulnlist_3})


def report(request):
    scantasklist = ScanTask.scantaskob.filter(runornot=2).filter(report=True)
    if request.method == 'POST':
        form = Report(request.POST)
        if form.is_valid():
                check = request.POST.getlist('choosescantask')
                if check:
                    for c in check:
                        ScanTask.scantaskob.filter(runornot=2).filter(pk=int(c)).update(report=False)
                    return HttpResponseRedirect("http://127.0.0.1:8000/vulnerability_scanning/report")
    else:
        form = Report()
    return render(request, "vulnerability_scanning/report.html", {'scantasklist': scantasklist, 'form': form})


